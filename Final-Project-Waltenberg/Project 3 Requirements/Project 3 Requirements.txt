Requirement gathering - 

System that allows users to create, display, and edit messages in a message board.
The scope will be restricted to a single topic (D&D). In this, users will be able to view, like and dislike content, reply to created posts.
As well as organize those posts by data, popularity, and the most recent posts. 
Admins will be able to remove posts and ban user accounts from having access to a page. 
User will be banned by time tables and will be able to interact again when their time is up.  
If a user dislikes a message on the board, that message can be reported and it will be added to a report list that the admins can review.
Admins can verify the quality of the post and remove if need be or okay it as acceptable.
Admins will have a list of banned accounts that they can review users to reduce their ban. 

Aesthetical Requirements - 
1. Choose Color pallete (Something easy on the eyes and that can be toggled between a light and darkmode.)
2. Choose font that will available to use. 
3. Design UX page design for user-base. 

User Roles - 
"Authors" - Will be able to view and like other messages, create and edit their own messages, and report other users messages. 
"Admins" - Will moderate the page, manage user roles, ban/remove users or their posts if bad, unban users, remove reported tags on a post. 
"Banned" - They have zero access to the message board and will be shown a "Banned" page despite being signed in. 

USER/ADMIN Content requirements - 
1. Will need to support text, images, and videos with aWYSYWYG editor for content management. 
2. Will need a like/dislike system. (This could be done with a bridge table between a post and a user.)
3. Users need to be able to report a user post to an admin. 
4. Users need to be able to comment on other users comments. (This could again, be done through a bridge table)
5. Admins need to delete a post. 
6. Admins should be able to revert a post to a previous version. (This could be done by storing edited messages as a new message with the previous message's id in it. by reading each previous ID, these messages could be populated as their own messages in the message block display and a chosen message could be overwritten by an older one.)
7. Banned Users shouldn't be able to view or interact with other users until their alloted time has ended. 

Technical requirements - 
1. Autogenerated pages with populated info from the user database. (home screen with posts, pages with older content, etc)
2. User post ability, once clicked, a user's post will open to a new page with the users comments, likes and dislikes from that user. The username will be displayed with the ability to go an view the users page. 
3. API endpoints that return information in a JSON format to then populate pages. 
4. Admin user control on posts. (Store previous versions of edited code within a column in a message, each previous message will return the next previous message until it returns null.)
5. Admins can delete posts from the database. Admins can all review and delete reported posts and override edited messages with the original ones.)
6. Implement meta tags, URL optimization, and a sitemap for better search engine visibility.